
user miao admin;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    # access_log  logs/access.log;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip  off;
    #设置允许压缩的页面最小字节(从header头的Content-Length中获取) 建议大于1k
    gzip_min_length 1;
    #等级1-9 最小的压缩最快 但是消耗cpu
    gzip_comp_level 2;
    #匹配压缩类型
    gzip_types text/plain application/x-javascript text/css text/javascript application/x-httpd-php image/jpeg image/gif image/png;

    server {
        listen       80;
        server_name  localhost 0.0.0.0;
        # 如果web文件目录被拷贝，记得修改这里用户名称
        root /Users/miao/server/web/;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;
    
        # 查询app审核状态，需要结合docker服务
        location ~ /appstoreManager/ {
            proxy_pass http://127.0.0.1:8080$request_uri;
        }
        
        # 下载页二维码生成服务
        location ~ /qr {
            proxy_pass http://127.0.0.1:8003$request_uri;
        }
    
        # 打包中心
        location /app-center/ {
            # root html;
            autoindex on;
            # index  index.html index.htm;
            add_header Cache-Control no-store;
        }
        
        # 查询最新版本信息，需要结合docker服务
        location /appstore-page/ {
            # root html;
            autoindex on;
            # index  index.html index.htm;
            add_header Cache-Control no-store;
        }

        location ~ /jsoncrack {
            # proxy_pass http://127.0.0.1:4201;
            rewrite ^ http://10.210.10.184:4201 redirect;
        }

        location = / {
            # root html;
            rewrite ^ /app-center redirect;
            add_header Cache-Control no-store;
        }


        #location / {
        #    root   html;
        #    index  index.html index.htm;
        #}

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
    #include servers/*;
}
